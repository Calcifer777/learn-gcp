"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1553],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(a),m=i,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return a?n.createElement(f,l(l({ref:t},u),{},{components:a})):n.createElement(f,l({ref:t},u))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},3183:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=a(7462),i=(a(7294),a(3905));const r={sidebar_position:4,sidebar_label:"Firestore"},l="Firestore",o={unversionedId:"databases/firestore",id:"databases/firestore",title:"Firestore",description:"Serverless document database",source:"@site/docs/databases/04-firestore.md",sourceDirName:"databases",slug:"/databases/firestore",permalink:"/learn-gcp/docs/databases/firestore",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Firestore"},sidebar:"tutorialSidebar",previous:{title:"Cloud Spanner",permalink:"/learn-gcp/docs/databases/cloud-spanner"},next:{title:"MemoryStore",permalink:"/learn-gcp/docs/databases/memory-store"}},s={},c=[{value:"Use cases",id:"use-cases",level:2},{value:"Objects",id:"objects",level:2},{value:"Documents",id:"documents",level:3},{value:"Time-to-live Policies",id:"time-to-live-policies",level:4},{value:"Collections",id:"collections",level:3},{value:"Sub-Collections",id:"sub-collections",level:3},{value:"Indexes",id:"indexes",level:3},{value:"Best practices",id:"best-practices",level:4},{value:"Data Model",id:"data-model",level:2},{value:"Database interaction",id:"database-interaction",level:2},{value:"Querying a collection",id:"querying-a-collection",level:3},{value:"Transactions",id:"transactions",level:3},{value:"Integration",id:"integration",level:2},{value:"Cloud Functions",id:"cloud-functions",level:3},{value:"Monitoring",id:"monitoring",level:2},{value:"Resources",id:"resources",level:2}],u={toc:c};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"firestore"},"Firestore"),(0,i.kt)("p",null,"Serverless document database"),(0,i.kt)("h2",{id:"use-cases"},"Use cases"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Storing user profiles"),(0,i.kt)("li",{parentName:"ul"},"Index for objects used in GCS")),(0,i.kt)("h2",{id:"objects"},"Objects"),(0,i.kt)("h3",{id:"documents"},"Documents"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Like JSON objects, but with extra data types and limited in size to 1 MB")),(0,i.kt)("h4",{id:"time-to-live-policies"},"Time-to-live Policies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Automatically remove stale data ",(0,i.kt)("strong",{parentName:"li"},"at the document level")," from your databases. "),(0,i.kt)("li",{parentName:"ul"},"A TTL policy designates a given field as the expiration time for documents in a given collection group.")),(0,i.kt)("h3",{id:"collections"},"Collections"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Containers for documents"),(0,i.kt)("li",{parentName:"ul"},"Schemaless: documents within the same collection can all contain different fields or store different types of data in those fields"),(0,i.kt)("li",{parentName:"ul"},"Created implicitly in Firestore when inserting a document for the first time")),(0,i.kt)("h3",{id:"sub-collections"},"Sub-Collections"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A collection associated with a specific document"),(0,i.kt)("li",{parentName:"ul"},"Can be created only starting from a document reference ")),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Deleting a document does not delete its subcollections!")),(0,i.kt)("h3",{id:"indexes"},"Indexes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Collections can be queries by one or multiple fields only if supported by an index"),(0,i.kt)("li",{parentName:"ul"},"Can be ",(0,i.kt)("em",{parentName:"li"},"single-field")," or ",(0,i.kt)("em",{parentName:"li"},"composite")),(0,i.kt)("li",{parentName:"ul"},"Single-field indexes for each field in a document and each subfield in a map are created automatically (",(0,i.kt)("a",{parentName:"li",href:"https://cloud.google.com/firestore/docs/concepts/index-overview#automatic_indexing"},"link"),")"),(0,i.kt)("li",{parentName:"ul"},"Contribute to the storage costs of your application"),(0,i.kt)("li",{parentName:"ul"},"Firestore's ability to merge indexes (?)")),(0,i.kt)("h4",{id:"best-practices"},"Best practices"),(0,i.kt)("p",null,"Use index single-field exemptions for:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"large string fields not used for querying"),(0,i.kt)("li",{parentName:"ul"},"TTL fields"),(0,i.kt)("li",{parentName:"ul"},"Index fields with sequential values (otherwise traffic capped at 500 writes / second)"),(0,i.kt)("li",{parentName:"ul"},"Large array or map fields: can incur in the limit of 40,000 index entries per document")),(0,i.kt)("h2",{id:"data-model"},"Data Model"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Pattern"),(0,i.kt)("th",{parentName:"tr",align:null},"Pro's"),(0,i.kt)("th",{parentName:"tr",align:null},"Con's"),(0,i.kt)("th",{parentName:"tr",align:null},"Use cases"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Nested data in documents"),(0,i.kt)("td",{parentName:"tr",align:null},"easy to set up"),(0,i.kt)("td",{parentName:"tr",align:null},"doc size increases with list length"),(0,i.kt)("td",{parentName:"tr",align:null},"store last N events")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Subcollections"),(0,i.kt)("td",{parentName:"tr",align:null},"doc size independent from list length"),(0,i.kt)("td",{parentName:"tr",align:null},"subcoll's are not deleted automatically"),(0,i.kt)("td",{parentName:"tr",align:null},"store all events of a type")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Root-level collections"),(0,i.kt)("td",{parentName:"tr",align:null},"good for many-to-many relationships"),(0,i.kt)("td",{parentName:"tr",align:null},"increase complexity in data retrieval"),(0,i.kt)("td",{parentName:"tr",align:null},"one collections for entity type")))),(0,i.kt)("h2",{id:"database-interaction"},"Database interaction"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You can access Firestore via a REST API or a gRPC API"),(0,i.kt)("li",{parentName:"ul"},"IAM authentication"),(0,i.kt)("li",{parentName:"ul"},"Can use admin or client libraries")),(0,i.kt)("h3",{id:"querying-a-collection"},"Querying a collection"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Supported operators: ",(0,i.kt)("inlineCode",{parentName:"li"},"<"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"<="),", ",(0,i.kt)("inlineCode",{parentName:"li"},"=="),", ",(0,i.kt)("inlineCode",{parentName:"li"},">="),", ",(0,i.kt)("inlineCode",{parentName:"li"},">"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"in"),". For array fields, ",(0,i.kt)("inlineCode",{parentName:"li"},"array-contains"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"array-contains-any"))),(0,i.kt)("h3",{id:"transactions"},"Transactions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The Firestore client libraries automatically retry transactions that fail due to data contention. After a finite number of retries, the transaction operation fails and returns an error message"),(0,i.kt)("li",{parentName:"ul"},"The server-client libraries use pessimistic concurrency controls resolve data contention.")),(0,i.kt)("h2",{id:"integration"},"Integration"),(0,i.kt)("h3",{id:"cloud-functions"},"Cloud Functions"),(0,i.kt)("p",null,"Cloud Functions can handle events in Cloud Firestore in ",(0,i.kt)("strong",{parentName:"p"},"the same Cloud project as the function"),". "),(0,i.kt)("p",null,"In a typical lifecycle, a Cloud Firestore function does the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Waits for changes to a particular document."),(0,i.kt)("li",{parentName:"ul"},"Triggers when an event occurs and performs its tasks."),(0,i.kt)("li",{parentName:"ul"},"Receives a data object with a snapshot of the affected document. For write or update events, the data object contains snapshots representing document state before and after the triggering event.")),(0,i.kt)("h2",{id:"monitoring"},"Monitoring"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Database access can be traced with ",(0,i.kt)("em",{parentName:"li"},"audit logs"),". To receive Data Access audit logs, you must explicitly enable them")),(0,i.kt)("h2",{id:"resources"},"Resources"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Docs: ",(0,i.kt)("a",{parentName:"li",href:"https://cloud.google.com/firestore/docs/concepts"},"https://cloud.google.com/firestore/docs/concepts")),(0,i.kt)("li",{parentName:"ul"},"YT channel: ",(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/c/firebase"},"https://www.youtube.com/c/firebase"))))}d.isMDXComponent=!0}}]);