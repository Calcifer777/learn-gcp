"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[254],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=u(r),m=i,d=b["".concat(o,".").concat(m)]||b[m]||c[m]||s;return r?n.createElement(d,a(a({ref:t},p),{},{components:r})):n.createElement(d,a({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=r.length,a=new Array(s);a[0]=b;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<s;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},8562:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var n=r(7462),i=(r(7294),r(3905));const s={sidebar_position:1,sidebar_label:"Intro"},a="Intro",l={unversionedId:"pubsub/intro",id:"pubsub/intro",title:"Intro",description:"Components",source:"@site/docs/pubsub/01-intro.md",sourceDirName:"pubsub",slug:"/pubsub/intro",permalink:"/learn-gcp/docs/pubsub/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Intro"},sidebar:"tutorialSidebar",previous:{title:"Pubsub",permalink:"/learn-gcp/docs/category/pubsub"},next:{title:"Topics",permalink:"/learn-gcp/docs/pubsub/topics"}},o={},u=[{value:"Components",id:"components",level:2},{value:"High level functionalities",id:"high-level-functionalities",level:2},{value:"Publishers",id:"publishers",level:2},{value:"Consumers",id:"consumers",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"intro"},"Intro"),(0,i.kt)("h2",{id:"components"},"Components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Message: the data that moves through the service."),(0,i.kt)("li",{parentName:"ul"},"Topic: a named entity that represents a feed of messages."),(0,i.kt)("li",{parentName:"ul"},"Subscription: a named entity that represents an interest in receiving messages on a particular topic."),(0,i.kt)("li",{parentName:"ul"},"Publisher (also called a producer): creates messages and sends (publishes) them to the messaging service on a specified topic."),(0,i.kt)("li",{parentName:"ul"},"Subscriber (also called a consumer): receives messages on a specified subscription.")),(0,i.kt)("h2",{id:"high-level-functionalities"},"High level functionalities"),(0,i.kt)("p",null,"Publisher"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Publishers send messages by making HTTPS requests to pubsub.googleapis.com")),(0,i.kt)("p",null,"Subscriber"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pull",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Subscriber makes HTTPS requests to pubsub.googleapis.com"))),(0,i.kt)("li",{parentName:"ul"},"Push",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Subscribers provide a web hook endpoint at the time of registration"),(0,i.kt)("li",{parentName:"ul"},"When a message is received on the topic, A HTTPS POST request is sent to the web hook endpoints")))),(0,i.kt)("p",null,"Very Flexible Publisher(s) and Subscriber(s) Relationships"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"One to Many"),(0,i.kt)("li",{parentName:"ul"},"Many to One"),(0,i.kt)("li",{parentName:"ul"},"Many to Many")),(0,i.kt)("h2",{id:"publishers"},"Publishers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Publisher sends a message to Topic"),(0,i.kt)("li",{parentName:"ul"},"Message individually delivered to each and every subscription"),(0,i.kt)("li",{parentName:"ul"},"Subscribers can receive message either by:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Push: Pub/Sub sends the message to Subscriber"),(0,i.kt)("li",{parentName:"ul"},"Pull: Subscribers poll for messages"))),(0,i.kt)("li",{parentName:"ul"},"Pub/Sub ensures the message is retained per subscription until it is acknowledged")),(0,i.kt)("h2",{id:"consumers"},"Consumers"),(0,i.kt)("p",null,"Each Subscription represents discrete pull of messages from a topic:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Multiple clients pull same subscription -> messages split between clients"),(0,i.kt)("li",{parentName:"ul"},"Multiple clients create a subscription each -> each client will get every message")))}c.isMDXComponent=!0}}]);