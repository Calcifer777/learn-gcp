"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5599],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=r.createContext({}),s=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(a),m=n,v=c["".concat(u,".").concat(m)]||c[m]||d[m]||l;return a?r.createElement(v,i(i({ref:t},p),{},{components:a})):r.createElement(v,i({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5462:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=a(7462),n=(a(7294),a(3905));const l={sidebar_position:1,sidebar_label:"BigQuery Overview"},i="BigQuery Overview",o={unversionedId:"bigquery/overview",id:"bigquery/overview",title:"BigQuery Overview",description:"Overview",source:"@site/docs/bigquery/01-overview.md",sourceDirName:"bigquery",slug:"/bigquery/overview",permalink:"/learn-gcp/docs/bigquery/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"BigQuery Overview"},sidebar:"tutorialSidebar",previous:{title:"BigQuery",permalink:"/learn-gcp/docs/category/bigquery"},next:{title:"BigQuery",permalink:"/learn-gcp/docs/bigquery/bigquery"}},u={},s=[{value:"Overview",id:"overview",level:2},{value:"Data Components",id:"data-components",level:2},{value:"Dataset",id:"dataset",level:3},{value:"Table",id:"table",level:3},{value:"Types",id:"types",level:4},{value:"Time travel",id:"time-travel",level:4},{value:"TTL",id:"ttl",level:4},{value:"Best practices",id:"best-practices",level:4},{value:"Views",id:"views",level:3},{value:"Materialized views",id:"materialized-views",level:3},{value:"Temporary and external tables",id:"temporary-and-external-tables",level:3},{value:"Routines",id:"routines",level:3},{value:"Search Indexes",id:"search-indexes",level:3},{value:"Other components",id:"other-components",level:2}],p={toc:s};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"bigquery-overview"},"BigQuery Overview"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Completely managed service"),(0,n.kt)("li",{parentName:"ul"},"Separation of storage and compute"),(0,n.kt)("li",{parentName:"ul"},"Automatically encryption all data at rest"),(0,n.kt)("li",{parentName:"ul"},"columnar format behind the scenes")),(0,n.kt)("h2",{id:"data-components"},"Data Components"),(0,n.kt)("h3",{id:"dataset"},"Dataset"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Logical container for tables and all other data components"),(0,n.kt)("li",{parentName:"ul"},"Similar to a traditional database schema"),(0,n.kt)("li",{parentName:"ul"},"Associated with a location (GCP zone)")),(0,n.kt)("h3",{id:"table"},"Table"),(0,n.kt)("h4",{id:"types"},"Types"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Standard Table: contain structured data"),(0,n.kt)("li",{parentName:"ul"},"Table clone: lightweight, writeable copy of a standard tables"),(0,n.kt)("li",{parentName:"ul"},"Table snapshot: read-only point-in-time copy of a table")),(0,n.kt)("h4",{id:"time-travel"},"Time travel"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Access data stored in BigQuery as from a previous point in time"),(0,n.kt)("li",{parentName:"ul"},"You can access the data from any point within the time-travel window (from 2 to 7 days; default 7 days)"),(0,n.kt)("li",{parentName:"ul"},"Can query data of deleted tables within time-travel window"),(0,n.kt)("li",{parentName:"ul"},"Allow point-in-time restoration from past versions of a table")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Change history")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"exposed as a SQL table-valued functions (TVF)"),(0,n.kt)("li",{parentName:"ul"},"shows you particular types of changes made during a specified time range."),(0,n.kt)("li",{parentName:"ul"},"Available functions:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"APPENDS"),": returns a table of all rows appended to a table for a given time range within the time-travel window")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  obj_id,\n  _CHANGE_TYPE AS change_type,\n  _CHANGE_TIMESTAMP AS change_time\nFROM APPENDS (TABLE mydataset.mytable, NULL, NULL);  -- NULL, NULL are start_ts and end_ts of time-travel window\n")),(0,n.kt)("h4",{id:"ttl"},"TTL"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Scheduled Query"),": prune hourly/daily data older than the TTL threshold"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Table partition expiration"),": create a partitioned table, and set the ",(0,n.kt)("inlineCode",{parentName:"p"},"partition_expiration_days")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE mydataset.newtable (obj_id INT64, ts DATE)\nPARTITION BY ts\nOPTIONS (partition_expiration_days=90)\n")),(0,n.kt)("h4",{id:"best-practices"},"Best practices"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Use complex types (nested fields, repeated fields)"),(0,n.kt)("li",{parentName:"ul"},"Partition or cluster the table (complex filters when querying do not give any advantage)")),(0,n.kt)("h3",{id:"views"},"Views"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Read-only virtual table defined by a SQL query"),(0,n.kt)("li",{parentName:"ul"},"Can be created with an expiration time")),(0,n.kt)("h3",{id:"materialized-views"},"Materialized views"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Precomputed view that periodically cache the results of the view query"),(0,n.kt)("li",{parentName:"ul"},"Best use cases: queries with high computation cost and small dataset results"),(0,n.kt)("li",{parentName:"ul"},"Allow partitioning on partitioned tables ")),(0,n.kt)("h3",{id:"temporary-and-external-tables"},"Temporary and external tables"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Temporary table: contain cached query results (do not generate charges)"),(0,n.kt)("li",{parentName:"ul"},"External table: table whose data resides in a data store that is external to BigQuery; the external data is co-located with the project")),(0,n.kt)("h3",{id:"routines"},"Routines"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"UDF",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"SQL expression or JavaScript code"),(0,n.kt)("li",{parentName:"ul"},"When using JS, can include libraries in GCS"),(0,n.kt)("li",{parentName:"ul"},"Can set IAM permissions at the UDF level"))),(0,n.kt)("li",{parentName:"ul"},"Table functions"),(0,n.kt)("li",{parentName:"ul"},"A SQL query that produces a table"),(0,n.kt)("li",{parentName:"ul"},"Remote function",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Call Cloud Functions and Cloud Run from BQ"),(0,n.kt)("li",{parentName:"ul"},"Can make batch calls"),(0,n.kt)("li",{parentName:"ul"},"Can specify ",(0,n.kt)("inlineCode",{parentName:"li"},"user_defined_context")," in the function definition; allows to re-use a single endpoint for diffent remote functions"))),(0,n.kt)("li",{parentName:"ul"},"Stored procedures",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"a collection of statements that can be called from other queries or other stored procedures"),(0,n.kt)("li",{parentName:"ul"},"can take input arguments and return values as output")))),(0,n.kt)("h3",{id:"search-indexes"},"Search Indexes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"SQL to find unique data elements buried in unstructured text and semi-structured JSON data"),(0,n.kt)("li",{parentName:"ul"},"No need to know the table schemas in advance")),(0,n.kt)("h2",{id:"other-components"},"Other components"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Job:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"used to query, load, or export data from BQ"),(0,n.kt)("li",{parentName:"ul"},"always runs in the same location as the tables that it references"))),(0,n.kt)("li",{parentName:"ul"},"Connections")))}d.isMDXComponent=!0}}]);